/*
 * SPDX-License-Identifier: Apache-2.0
 *
 * Copyright 2020-2021 Agorapulse.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'groovy'
    id "jp.classmethod.aws.lambda"
    id "com.github.johnrengelman.shadow"
}

dependencies {
    implementation project(':micronaut-log4aws')

    annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testCompile platform("io.micronaut:micronaut-bom:$micronautVersion")

    annotationProcessor "io.micronaut:micronaut-inject-java"

    implementation "io.micronaut:micronaut-core"
    implementation "io.micronaut:micronaut-function"
    implementation 'javax.inject:javax.inject:1'

    compileOnly "io.micronaut:micronaut-inject-groovy"

    testAnnotationProcessor "io.micronaut:micronaut-inject-java"

    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "com.github.stefanbirkner:system-lambda:$systemLambdaVersion"
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
}


shadowJar {
    mergeServiceFiles()
    mergeGroovyExtensionModules()
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

aws {
    profileName = 'beta'
    region = 'eu-west-1'
}

task deploy(type: jp.classmethod.aws.gradle.lambda.AWSLambdaMigrateFunctionTask, dependsOn: shadowJar) {
    functionName = "MicronautLog4AwsDemo"
    handler = "com.agorapulse.micronaut.log4aws.demo.LoggingDemo::apply"
    role = "arn:aws:iam::${aws.accountId}:role/lambda-basic-role"
    runtime = com.amazonaws.services.lambda.model.Runtime.Java8
    zipFile = shadowJar.archivePath
    memorySize = 1024
    timeout = 300
    publish = true
}

